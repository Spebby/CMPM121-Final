<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9a2c4400-abd6-4170-b2c7-1bce3c2ec6ae" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.github/workflows/activation.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.CMPM121-Part1/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.CMPM121-Part1/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.CMPM121-Part1/.idea/indexLayout.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.CMPM121-Part1/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.CMPM121-Part1/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Core/CoroutineManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Core/CoroutineManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Core/EventBus.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Core/EventBus.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Core/GameManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Core/GameManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Core/PlayerController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Core/PlayerController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/DamageSystem/Damage.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/DamageSystem/Damage.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/DamageSystem/Hittable.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/DamageSystem/Hittable.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Internal/SpriteView.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Internal/SpriteView.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Internal/SpriteViewer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Internal/SpriteViewer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Levels/EnemySpawner.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Levels/EnemySpawner.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Levels/SpawnPoint.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Levels/SpawnPoint.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Movement/EnemyController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Movement/EnemyController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Movement/Unit.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Movement/Unit.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Projectiles/HomingProjectileMovement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Projectiles/HomingProjectileMovement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Projectiles/ProjectileController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Projectiles/ProjectileController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Projectiles/ProjectileMovement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Projectiles/ProjectileMovement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Projectiles/SpiralingProjectileMovement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Projectiles/SpiralingProjectileMovement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Projectiles/StraightProjectileMovement.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Projectiles/StraightProjectileMovement.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Spells/ProjectileManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Spells/ProjectileManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Spells/Spell.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Spells/Spell.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Spells/SpellBuilder.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Spells/SpellBuilder.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/Spells/SpellCaster.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/Spells/SpellCaster.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/EnemySpriteManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/EnemySpriteManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/IconManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/IconManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/PlayerSpriteManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/PlayerSpriteManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/RelicIconManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/RelicIconManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/SpellIconManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/SpriteManagement/SpellIconManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/AnimateDamage.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/AnimateDamage.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/DamageNumbers.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/DamageNumbers.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/HealthBar.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/HealthBar.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/ManaBar.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/ManaBar.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/MenuSelectorController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/MenuSelectorController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/RelicUI.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/RelicUI.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/RelicUIManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/RelicUIManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/RewardScreenManager.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/RewardScreenManager.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/SpellUI.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/SpellUI.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/SpellUIContainer.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/SpellUIContainer.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/Scripts/UI/WaveLabelController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/Scripts/UI/WaveLabelController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assets/UniversalRenderPipelineGlobalSettings.asset" beforeDir="false" afterPath="$PROJECT_DIR$/Assets/UniversalRenderPipelineGlobalSettings.asset" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Packages/manifest.json" beforeDir="false" afterPath="$PROJECT_DIR$/Packages/manifest.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Packages/packages-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/Packages/packages-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ProjectSettings/ProjectVersion.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ProjectSettings/ProjectVersion.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 4
}]]></component>
  <component name="ProjectId" id="2vZW2pucMhyEovrrz9jWGjyhlgY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.sourceCode.C#",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Attach to Unity Editor.Attach to Unity Editor">
    <configuration name="Start Unity" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="$PROJECT_DIR$/../Hub/Editor/6000.0.44f1/Editor/Unity" />
      <option name="PROGRAM_PARAMETERS" value="-projectPath $PROJECT_DIR$ -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Unit Tests (batch mode)" type="RunUnityExe" factoryName="Unity Executable">
      <option name="EXE_PATH" value="$PROJECT_DIR$/../Hub/Editor/6000.0.44f1/Editor/Unity" />
      <option name="PROGRAM_PARAMETERS" value="-runTests -batchmode -projectPath $PROJECT_DIR$ -testResults Logs/results.xml -logFile Logs/Editor.log -testPlatform EditMode -debugCodeOptimization" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PASS_PARENT_ENVS" value="1" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor &amp; Play" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="UNITY_ATTACH_AND_PLAY" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="runtimes">
        <list />
      </option>
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
    <configuration name="Attach to Unity Editor" type="UNITY_DEBUG_RUN_CONFIGURATION" factoryName="Unity Debug" show_console_on_std_err="false" show_console_on_std_out="false" port="50000" address="localhost">
      <option name="allowRunningInParallel" value="false" />
      <option name="listenPortForConnections" value="false" />
      <option name="pid" />
      <option name="projectPathOnTarget" />
      <option name="runtimes">
        <list />
      </option>
      <option name="selectedOptions">
        <list />
      </option>
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9a2c4400-abd6-4170-b2c7-1bce3c2ec6ae" name="Changes" comment="" />
      <created>1744352872553</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744352872553</updated>
      <workItem from="1744352873113" duration="6235000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="true" />
  <component name="UnityProjectDiscoverer">
    <option name="hasUnityReference" value="true" />
    <option name="unityProject" value="true" />
    <option name="unityProjectFolder" value="true" />
  </component>
  <component name="UnityUnitTestConfiguration" currentTestLauncher="Both" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>